#!/usr/bin/env jiig-run
"""
Tzar archive manager.

Jiig-based tool to create and manage archives of the working folder.
"""

tool_name = 'tzar'

project_name = 'Tzar'

description = 'Tzar archive manager.'

version = '0.5'

author = 'Steve Cooper'

# noinspection PyShadowingBuiltins
copyright = '2021, Steve Cooper'

pip_packages = ['pdoc3']


def boot():
    """
    Tzar bootstrap function.

    :return: tool class type
    """
    from jiig import model
    from jiig.task import alias, help, unittest, venv
    from tzar.task import catalog, compare, delete, list, prune, save

    class ToolClass(model.Tool):
        """Simple archive manager."""

        tasks = {
            'catalog': catalog,
            'compare': compare,
            'delete': delete,
            'list': list,
            'prune': prune,
            'save': save,
        }

        secondary_tasks = {
            'alias': alias,
            'help': help,
        }

        hidden_tasks = {
            'unittest': unittest,
            'venv': venv,
        }

        footnotes = {
            'age_option': '''
    Age strings are one or more summed values separated by '+'. A value is a number
    trailed by a "ymwdHMS" unit letter.
    ''',
            'destructive': 'Destructive operations require confirmation by default.',
        }

    return ToolClass
